{"ast":null,"code":"import _classCallCheck from \"/Users/anuragkumar/Desktop/react/react-backend/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anuragkumar/Desktop/react/react-backend/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anuragkumar/Desktop/react/react-backend/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anuragkumar/Desktop/react/react-backend/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anuragkumar/Desktop/react/react-backend/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/anuragkumar/Desktop/react/react-backend/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/anuragkumar/Desktop/react/react-backend/client/src/components/inputs/Number.js\";\nimport React, { Component } from 'react';\nvar date = new Date();\nvar year = date.getFullYear();\n\nvar Number =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Number, _Component);\n\n  function Number(props) {\n    var _this;\n\n    _classCallCheck(this, Number);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Number).call(this, props));\n\n    _this.isNumeric = function (val) {\n      var re = /^\\d+$/;\n      return re.test(val);\n    };\n\n    _this.handleChange = function (e) {\n      if (_this.isNumeric(e.target.value) || e.target.value === '') {\n        _this.setState({\n          error: undefined\n        });\n\n        _this.props.handleChange(e);\n\n        console.log('yeah?');\n      } else {\n        if (e.target.name === 'star_count') {\n          _this.setState({\n            error: 'Please Enter a Number'\n          });\n        } else if (e.target.name === 'year') {\n          _this.setState({\n            error: 'Please Enter a Valid Date'\n          });\n        }\n      }\n\n      console.log('is error?', _this.state.error); //this.props.toggleButton(this.state.error);\n    };\n\n    _this.state = {\n      error: undefined\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // isValidYear = (val) => {\n  //   if (val.length !== 4) {\n  //     this.setState({ error: 'Please Enter a 4 Digit Year'})\n  //     //return false;\n  //   }\n  //\n  //   if (val > year) {\n  //     this.setState({ error: \"Can't Retrieve Movies From the Future\"})\n  //     //return false;\n  //   }\n  //\n  //   return true;\n  // }\n\n\n  _createClass(Number, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: this.props.placeholder,\n        value: this.props.value,\n        onChange: this.handleChange,\n        name: this.props.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: this.props.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.props.label), this.state.error && React.createElement(\"span\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.state.error));\n    }\n  }]);\n\n  return Number;\n}(Component);\n\nexport default Number;","map":{"version":3,"sources":["/Users/anuragkumar/Desktop/react/react-backend/client/src/components/inputs/Number.js"],"names":["React","Component","date","Date","year","getFullYear","Number","props","isNumeric","val","re","test","handleChange","e","target","value","setState","error","undefined","console","log","name","state","bind","placeholder","label"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,IAAMC,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAb;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UAsBnBC,SAtBmB,GAsBP,UAACC,GAAD,EAAS;AACnB,UAAMC,EAAE,GAAG,OAAX;AACA,aAAOA,EAAE,CAACC,IAAH,CAAQF,GAAR,CAAP;AACD,KAzBkB;;AAAA,UA2BnBG,YA3BmB,GA2BJ,UAACC,CAAD,EAAO;AACpB,UAAI,MAAKL,SAAL,CAAeK,CAAC,CAACC,MAAF,CAASC,KAAxB,KAAkCF,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,EAAzD,EAA6D;AAC3D,cAAKC,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAEC;AAAT,SAAd;;AACA,cAAKX,KAAL,CAAWK,YAAX,CAAwBC,CAAxB;;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,OAJD,MAIO;AACL,YAAIP,CAAC,CAACC,MAAF,CAASO,IAAT,KAAkB,YAAtB,EAAoC;AAClC,gBAAKL,QAAL,CAAc;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAd;AACD,SAFD,MAEO,IAAIJ,CAAC,CAACC,MAAF,CAASO,IAAT,KAAkB,MAAtB,EAA8B;AACnC,gBAAKL,QAAL,CAAc;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAd;AACD;AACF;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB,MAAKE,KAAL,CAAWL,KAAnC,EAZoB,CAapB;AACD,KAzCkB;;AAEjB,UAAKK,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAEC;AADI,KAAb;AAGA,UAAKN,YAAL,GAAoB,MAAKA,YAAL,CAAkBW,IAAlB,uDAApB;AALiB;AAMlB,G,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;6BAuBS;AACP,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAI,KAAKhB,KAAL,CAAWiB,WAF5B;AAGE,QAAA,KAAK,EAAK,KAAKjB,KAAL,CAAWQ,KAHvB;AAIE,QAAA,QAAQ,EAAE,KAAKH,YAJjB;AAKE,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWc,IALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQA;AAAO,QAAA,OAAO,EAAE,KAAKd,KAAL,CAAWc,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC,KAAKd,KAAL,CAAWkB,KAA7C,CARA,EASC,KAAKH,KAAL,CAAWL,KAAX,IACD;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,KAAKK,KAAL,CAAWL,KAApC,CAVA,CADF;AAcD;;;;EA3DkBhB,S;;AA8DrB,eAAeK,MAAf","sourcesContent":["import React, { Component } from 'react';\n\nconst date = new Date();\nconst year = date.getFullYear();\n\nclass Number extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: undefined\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // isValidYear = (val) => {\n  //   if (val.length !== 4) {\n  //     this.setState({ error: 'Please Enter a 4 Digit Year'})\n  //     //return false;\n  //   }\n  //\n  //   if (val > year) {\n  //     this.setState({ error: \"Can't Retrieve Movies From the Future\"})\n  //     //return false;\n  //   }\n  //\n  //   return true;\n  // }\n\n  isNumeric = (val) => {\n    const re = /^\\d+$/;\n    return re.test(val);\n  }\n\n  handleChange = (e) => {\n    if (this.isNumeric(e.target.value) || e.target.value === '') {\n      this.setState({ error: undefined });\n      this.props.handleChange(e);\n      console.log('yeah?')\n    } else {\n      if (e.target.name === 'star_count') {\n        this.setState({ error: 'Please Enter a Number' })\n      } else if (e.target.name === 'year') {\n        this.setState({ error: 'Please Enter a Valid Date' })\n      }\n    }\n    console.log('is error?',this.state.error);\n    //this.props.toggleButton(this.state.error);\n  }\n\n  render() {\n    return(\n      <div className=\"number\">\n        <input\n          type=\"text\"\n          placeholder = {this.props.placeholder}\n          value = { this.props.value }\n          onChange={this.handleChange}\n          name={this.props.name}\n        />\n      <label htmlFor={this.props.name}>{this.props.label}</label>\n      {this.state.error &&\n      <span className='error'>{this.state.error}</span>}\n      </div>\n    )\n  }\n}\n\nexport default Number;\n"]},"metadata":{},"sourceType":"module"}